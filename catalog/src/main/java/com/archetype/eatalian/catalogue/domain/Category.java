/*
* This code has been generated by the Rebel: a code generator for modern Java.
*
* Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
*/
package com.archetype.eatalian.catalogue.domain;

import java.util.*;
import java.time.*;

import javax.persistence.*;
import javax.validation.constraints.*;


// ----------- << imports@AAAAAAFsmPK/1Vh8zH4= >>
// ----------- >>

@Entity
// ----------- << class.annotations@AAAAAAFsmPK/1Vh8zH4= >>
// ----------- >>
public class Category {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    // ----------- << id.annotations@AAAAAAFsmPK/1Vh8zH4= >>
    // ----------- >>
    private Long id;

    @NotNull
    @Column(nullable = false)
    // ----------- << attribute.annotations@AAAAAAFsmPLlCljPu2Y= >>
    // ----------- >>
    private String name;

    @Column
    // ----------- << attribute.annotations@AAAAAAFsmPLyiFjWpsc= >>
    // ----------- >>
    private String description;

    @OneToMany(mappedBy = "category")
    // ----------- << attribute.annotations@AAAAAAFsmPRXTVko8W8= >>
    // ----------- >>
    private Set<Product> products = new HashSet<>();

    @OneToMany(mappedBy = "parent")
    // ----------- << attribute.annotations@AAAAAAFsmPVVOVnYgeU= >>
    // ----------- >>
    private Set<Category> subCategories = new HashSet<>();

    @ManyToOne
    @JoinColumn(name = "parent_id")
    // ----------- << attribute.annotations@AAAAAAFsmPVVOVnX+rY= >>
    // ----------- >>
    private Category parent;

    // ----------- << getId.annotations@AAAAAAFsmPK/1Vh8zH4= >>
    // ----------- >>
    public Long getId(){
        return id;
    }

    public String getName() {
        return name;
    }

    public String getDescription() {
        return description;
    }

    public Set<Product> getProducts() {
        return products;
    }

    public Set<Category> getSubCategories() {
        return subCategories;
    }

    public Category getParent() {
        return parent;
    }

    public Category setName(String name) {
        this.name = name;
        return this;
    }

    public Category setDescription(String description) {
        this.description = description;
        return this;
    }

    public Category setParent(Category parent) {
        this.parent = parent;
        return this;
    }

    public Category linkProducts(Product _products) {
        if (_products != null) {
            _products.unlinkCategory();
            _products.setCategory(this);
            getProducts().add(_products);
        }
        return this;
    }

    public Category linkSubCategories(Category _subCategories) {
        if (_subCategories != null) {
            _subCategories.unlinkParent();
            _subCategories.setParent(this);
            getSubCategories().add(_subCategories);
        }
        return this;
    }

    public Category linkParent(Category _parent) {
        if (_parent != null) {
            _parent.getSubCategories().add(this);
        }

        unlinkParent();
        setParent(_parent);
        return this;
    }

    public Category unlinkProducts(Product _products) {
        if (_products != null) {
            _products.setCategory(null);
            getProducts().remove(_products);
        }
        return this;
    }

    public Category unlinkProducts(Product _products, Iterator<Product> it) {
        if (_products != null) {
            _products.setCategory(null);
            it.remove();
        }
        return this;
    }

    public Category unlinkSubCategories(Category _subCategories) {
        if (_subCategories != null) {
            _subCategories.setParent(null);
            getSubCategories().remove(_subCategories);
        }
        return this;
    }

    public Category unlinkSubCategories(Category _subCategories, Iterator<Category> it) {
        if (_subCategories != null) {
            _subCategories.setParent(null);
            it.remove();
        }
        return this;
    }

    public Category unlinkParent() {
        if (getParent() != null) {
            getParent().getSubCategories().remove(this);
            setParent(null);
        }
        return this;
    }

    // ----------- << equals.annotations@AAAAAAFsmPK/1Vh8zH4= >>
    // ----------- >>
    @Override
    public boolean equals(Object obj) {
        if (super.equals(obj)) return true;
        if (getId() == null) return false;
        return obj instanceof Category && (getId().equals(((Category) obj).getId()));
    }

    // ----------- << hashCode.annotations@AAAAAAFsmPK/1Vh8zH4= >>
    // ----------- >>
    @Override
    public int hashCode() {
        return 406;
    }

// ----------- << class.extras@AAAAAAFsmPK/1Vh8zH4= >>
// ----------- >>
}