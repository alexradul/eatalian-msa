/*
* This code has been generated by the Rebel: a code generator for modern Java.
*
* Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
*/
package com.archetype.eatalian.accounts.domain;

import java.util.*;
import java.time.*;

import javax.persistence.*;
import javax.validation.constraints.*;


// ----------- << imports@AAAAAAFsmOMlDAPjE2E= >>
// ----------- >>

@Entity
// ----------- << class.annotations@AAAAAAFsmOMlDAPjE2E= >>
// ----------- >>
public class Account {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    // ----------- << id.annotations@AAAAAAFsmOMlDAPjE2E= >>
    // ----------- >>
    private Long id;

    @Version
    // ----------- << version.annotations@AAAAAAFsmOMlDAPjE2E= >>
    // ----------- >>
    private Long version;

    @NotNull
    @Column(nullable = false)
    // ----------- << attribute.annotations@AAAAAAFsmONmpwQbSPg= >>
    // ----------- >>
    private String email;

    @NotNull
    @Column(nullable = false)
    // ----------- << attribute.annotations@AAAAAAFsmON9NQQixdE= >>
    // ----------- >>
    private String password;

    @NotNull
    @Column(nullable = false)
    // ----------- << attribute.annotations@AAAAAAFsmOM0OAQN5bY= >>
    // ----------- >>
    private String firstName;

    @NotNull
    @Column(nullable = false)
    // ----------- << attribute.annotations@AAAAAAFsmONTCQQUG1k= >>
    // ----------- >>
    private String lastName;

    @Column
    // ----------- << attribute.annotations@AAAAAAFsmOOPjgQphws= >>
    // ----------- >>
    private String phoneNo;

    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name="streetAndNo", column = @Column(name = "shipmentAddress_streetAndNo")),
        @AttributeOverride(name="city", column = @Column(name = "shipmentAddress_city")),
        @AttributeOverride(name="postalCode", column = @Column(name = "shipmentAddress_postalCode")),
        @AttributeOverride(name="floor", column = @Column(name = "shipmentAddress_floor"))
    })
    // ----------- << attribute.annotations@AAAAAAFsmOU0XASDFZ4= >>
    // ----------- >>
    private Address shipmentAddress;

    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name="streetAndNo", column = @Column(name = "billingAddress_streetAndNo")),
        @AttributeOverride(name="city", column = @Column(name = "billingAddress_city")),
        @AttributeOverride(name="postalCode", column = @Column(name = "billingAddress_postalCode")),
        @AttributeOverride(name="floor", column = @Column(name = "billingAddress_floor"))
    })
    // ----------- << attribute.annotations@AAAAAAFsmOVrtwTNz48= >>
    // ----------- >>
    private Address billingAddress;

    // ----------- << getId.annotations@AAAAAAFsmOMlDAPjE2E= >>
    // ----------- >>
    public Long getId(){
        return id;
    }

    public String getEmail() {
        return email;
    }

    public String getPassword() {
        return password;
    }

    public String getFirstName() {
        return firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public String getPhoneNo() {
        return phoneNo;
    }

    public Address getShipmentAddress() {
        return shipmentAddress;
    }

    public Address getBillingAddress() {
        return billingAddress;
    }

    public Account setEmail(String email) {
        this.email = email;
        return this;
    }

    public Account setPassword(String password) {
        this.password = password;
        return this;
    }

    public Account setFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    public Account setLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    public Account setPhoneNo(String phoneNo) {
        this.phoneNo = phoneNo;
        return this;
    }

    public Account setShipmentAddress(Address shipmentAddress) {
        this.shipmentAddress = shipmentAddress;
        return this;
    }

    public Account setBillingAddress(Address billingAddress) {
        this.billingAddress = billingAddress;
        return this;
    }

    public Account linkShipmentAddress(Address _shipmentAddress) {
        setShipmentAddress(_shipmentAddress);
        return this;
    }

    public Account linkBillingAddress(Address _billingAddress) {
        setBillingAddress(_billingAddress);
        return this;
    }

    public Account unlinkShipmentAddress() {
        setShipmentAddress(null);
        return this;
    }

    public Account unlinkBillingAddress() {
        setBillingAddress(null);
        return this;
    }

    // ----------- << equals.annotations@AAAAAAFsmOMlDAPjE2E= >>
    // ----------- >>
    @Override
    public boolean equals(Object obj) {
        if (super.equals(obj)) return true;
        if (getId() == null) return false;
        return obj instanceof Account && (getId().equals(((Account) obj).getId()));
    }

    // ----------- << hashCode.annotations@AAAAAAFsmOMlDAPjE2E= >>
    // ----------- >>
    @Override
    public int hashCode() {
        return 388;
    }

// ----------- << class.extras@AAAAAAFsmOMlDAPjE2E= >>


    public Account() {
    }

    public Account(@NotNull String email, @NotNull String firstName, @NotNull String lastName) {
        this.email = email;
        this.firstName = firstName;
        this.lastName = lastName;
    }

// ----------- >>
}